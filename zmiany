# W pliku schedule_edit_dialogs.py, wewnątrz klasy ScheduleChangeDialog

def apply_dialog_theme(self):
    actual_theme = self.determined_theme
    self.setStyleSheet(AppStyles.get_dialog_style(actual_theme))
    
    # Pobierz style z centralnej klasy
    button_style = AppStyles.get_button_style(actual_theme)
    combobox_style = AppStyles.get_combobox_style(actual_theme)
    checkbox_style = AppStyles.get_checkbox_style(actual_theme) # Pobierz styl dla checkboxów

    # Styl dla panelu "Zastosuj dla wszystkich"
    if hasattr(self, 'all_time_button'):
        self.all_time_button.setStyleSheet(button_style)
        self.all_hours_button.setStyleSheet(button_style)
        self.all_location_combo.setStyleSheet(combobox_style)
        
        # --- POCZĄTEK POPRAWKI ---
        # Zastosuj styl do checkboxów w tym panelu
        self.apply_location_check.setStyleSheet(checkbox_style)
        self.apply_time_check.setStyleSheet(checkbox_style)
        self.apply_hours_check.setStyleSheet(checkbox_style)
        # --- KONIEC POPRAWKI ---

        # Znajdź przycisk "Zastosuj dla wszystkich" wewnątrz grupy i zastosuj styl
        apply_all_button = self.findChild(QGroupBox).findChild(QPushButton)
        if apply_all_button:
            apply_all_button.setStyleSheet(button_style)

    # Styl dla przycisku "Zamknij"
    if hasattr(self, 'close_button'):
        self.close_button.setStyleSheet(button_style)
        
    # Style dla kontrolek w tabeli
    if hasattr(self, 'cells_table'):
        self.cells_table.setStyleSheet(AppStyles.get_tablewidget_style(actual_theme))
        for row in range(self.cells_table.rowCount()):
            for col_idx in [4, 5, 6, 7]: 
                widget = self.cells_table.cellWidget(row, col_idx)
                if isinstance(widget, QComboBox):
                    widget.setStyleSheet(combobox_style)
                elif isinstance(widget, QPushButton):
                    widget.setStyleSheet(button_style)

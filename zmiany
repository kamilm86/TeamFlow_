# W pliku main.py, wewnątrz klasy WorkScheduleWindow

def _manage_location_exception(self, params):
    """Zarządza dodawaniem, edycją i usuwaniem wyjątków, ręcznie kontrolując transakcję."""
    conn = None # Zdefiniuj 'conn' przed blokiem try
    try:
        conn = DatabaseConnector.get_connection()
        # Krok 1: Wyłącz autocommit, aby przejąć pełną kontrolę nad transakcją
        conn.autocommit = False
        cursor = conn.cursor()
        
        query = f"EXEC {SQL_OBJECTS['p_p_zz_lokalizacjewyjatki']} ?, ?, ?, ?, ?, ?, ?, ?"
        cursor.execute(query, params)
        
        # Krok 2: Upewnij się, że cała procedura (wszystkie jej wewnętrzne polecenia) się wykonała
        while cursor.nextset():
            pass

        # Krok 3: Jeśli nie było błędów, zatwierdź całą transakcję
        conn.commit()
        
        return {"success": True}

    except Exception as e:
        log_error(f"Błąd podczas zarządzania wyjątkiem lokalizacyjnym, wycofywanie transakcji: {e}", exception=e)
        # Krok 4: Jeśli wystąpił błąd, wycofaj wszystkie zmiany wykonane w tej transakcji
        if conn:
            try:
                conn.rollback()
            except Exception as rb_e:
                log_error(f"Błąd podczas rollbacku transakcji: {rb_e}", exception=rb_e)
        return {"success": False, "message": str(e)}
        
    finally:
        # Krok 5: Zawsze przywróć autocommit i zamknij połączenie
        if conn:
            try:
                conn.autocommit = True
                conn.close()
            except Exception as close_e:
                log_error(f"Błąd podczas zamykania połączenia: {close_e}", exception=close_e)

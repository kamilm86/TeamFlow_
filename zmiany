# W pliku location_exception_dialog.py, wewnątrz klasy LocationExceptionDialog

def _add_exception(self):
    """Otwiera dialog dodawania z datami wypełnionymi na podstawie zaznaczenia."""
    dialog = AddEditExceptionDialog(self, user_name=self.user_name, default_dates=self.selection_range)
    if dialog.exec() == QDialog.Accepted:
        data = dialog.get_data()
        if data:
            # --- POCZĄTEK NOWEJ WERYFIKACJI ---
            # Krok 1: Sprawdź, czy w podanym zakresie dat istnieją już jakieś wyjątki
            existing_exceptions = self.parent_widget._get_location_exceptions(self.user_id, data['date_from'], data['date_to'])
            
            if existing_exceptions:
                # Jeśli cokolwiek znaleziono, zablokuj operację i poinformuj użytkownika
                QMessageBox.warning(self, "Wykryto kolizję", 
                                    "W wybranym zakresie dat istnieje już co najmniej jeden wpis wyjątku.\n\n"
                                    "Proszę najpierw usunąć lub edytować istniejące wpisy, aby uniknąć konfliktów.")
                return # Przerwij działanie metody
            # --- KONIEC NOWEJ WERYFIKACJI ---

            # Krok 2: Jeśli nie ma kolizji, kontynuuj dodawanie wpisów
            _, modyfikujacy_id, _, _, _ = get_modifier_id()
            errors = []
            current_date = data['date_from']
            end_date = data['date_to']

            while current_date <= end_date:
                date_str = current_date.toString("yyyy-MM-dd")
                params = (self.user_id, modyfikujacy_id, date_str, date_str, data['lokalizacja'], data['powod'], 1, None)
                result = self.parent_widget._manage_location_exception(params)
                if not result.get("success"):
                    errors.append(f"{date_str}: {result.get('message')}")
                current_date = current_date.addDays(1)
            
            if errors:
                QMessageBox.warning(self, "Wystąpiły błędy", "Nie wszystkie dni udało się dodać:\n\n" + "\n".join(errors))
            
            self.load_exceptions()
            self.data_changed.emit()
